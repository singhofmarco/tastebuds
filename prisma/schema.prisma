generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_NON_POOLING")
}

model Recipe {
  id          Int              @id @default(autoincrement())
  title       String           @db.VarChar(255)
  createdAt   DateTime         @default(now()) @db.Timestamp(6)
  updatedAt   DateTime         @default(now()) @db.Timestamp(6)
  description String?
  published   Boolean          @default(false)
  image       String?           @db.Text
  userId      Int?
  user        User?             @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ingredients Json
  steps       Json
  totalTime   String
  cuisineType String
  teams       TeamsOnRecipes[]
}

model Ingredient {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  recipeId Int
  // recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Team {
  id      Int              @id @default(autoincrement())
  name    String
  users   User[]
  recipes TeamsOnRecipes[]
}

model TeamsOnRecipes {
  teamId   Int
  recipeId Int
  team     Team   @relation(fields: [teamId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cookedAt DateTime? @db.Timestamp(6)

  @@id([teamId, recipeId])
}

model User {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(255)
  email    String   @unique @db.VarChar(255)
  password String   @db.VarChar(255)
  recipes  Recipe[]
  teams    Team[]
}
